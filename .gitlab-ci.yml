image: python:3.7-stretch

stages:
  - test
  - build
  - viruscheck
  - package

viruscheck:virustotal:
  stage: viruscheck
  tags:
    - win10
  script:
    - Invoke-WebRequest -UseBasicParsing -Uri "$OPSIDEVTOOLS_URL_WINDOWS_X86" -OutFile opsi-dev-tools.zip
    - Expand-Archive opsi-dev-tools.zip -DestinationPath opsi-dev-tools
    - '$proc = (Start-Process -FilePath "opsi-dev-tools\opsi-dev-tool.exe" -ArgumentList "-l debug --virustotal-analysis opsiclientd_windows_x86\opsiclientd.exe --output-type simple --output-file viruscheck.txt" -PassThru -Wait)'
    - 'Write-Host "VirusTotal analysis finished with exit code: $($proc.ExitCode)"'
  artifacts:
    name: 'opsiclientd_viruscheck'
    paths:
      - viruscheck.txt
    expire_in: 14 days
  only:
    - tags

.run_opsiclientd: &run_opsiclientd |
  mkdir -p /var/log/opsi-client-agent
  mkdir -p /etc/opsi-client-agent
  cp opsiclientd_data/linux/opsiclientd.conf /etc/opsi-client-agent/opsiclientd.conf
  sed -i s'/url =.*/url = /' /etc/opsi-client-agent/opsiclientd.conf
  sed -i s'/host_id =.*/host_id = testclient.opsi.org/' /etc/opsi-client-agent/opsiclientd.conf
  sed -i s'/opsi_host_key =.*/opsi_host_key = opsiopsiopsiopsiopsiopsiopsiopsi/' /etc/opsi-client-agent/opsiclientd.conf
  sed -i s'#static_dir =.*#static_dir = opsiclientd_data/common/static_html#' /etc/opsi-client-agent/opsiclientd.conf
  #cat /etc/opsi-client-agent/opsiclientd.conf
  openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 -nodes -keyout /etc/opsi-client-agent/opsiclientd.pem -out /etc/opsi-client-agent/opsiclientd.pem -subj "/CN=testclient.opsi.org"
  poetry run opsiclientd -l 1 &

test:pylint-pytest:
  stage: test
  script:
    - apt -y install curl openssl
    - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3
    - source $HOME/.poetry/env
    - "[ -e coverage.xml ] && rm coverage.xml"
    - poetry install
    - *run_opsiclientd
    - poetry run pylint --disable=R,C,fixme opsiclientd
    - poetry run pytest -o junit_family=xunit2 --junitxml=testreport.xml --cov-config .coveragerc --cov opsiclientd --cov-report term --cov-report xml -v tests
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+)%/'
  artifacts:
    name: 'opsiclientd_test'
    paths:
      - coverage.xml
      - testreport.xml
    expire_in: 14 days

build:pyinstaller-linux-x64:
  stage: build
  script:
    - apt -y install curl
    - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3
    - source $HOME/.poetry/env
    #- sed -i s'/^python-opsi = .*/python-opsi = "^4.2"/' pyproject.toml
    #- poetry update python-opsi
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - mv opsiclientd opsiclientd.src
    - mv dist/opsiclientd opsiclientd_linux_x64
    # Check if binary is working
    - ./opsiclientd_linux_x64/opsiclientd --version
    # Push to biaryindex
    - '[ "$CI_COMMIT_TAG" = "" ] && poetry run opsi-dev-tool -l info --binary-push opsiclientd_linux_x64 "$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || poetry run opsi-dev-tool -l info --binary-push opsiclientd_linux_x64'
  artifacts:
    name: opsiclientd_linux_x64
    paths:
      - opsiclientd_linux_x64
    expire_in: 2 day

build:pyinstaller-darwin-x64:
  stage: build
  tags:
    - macostest
  script:
    - source $HOME/.poetry/env
    #- sed -ie s'/^python-opsi = .*/python-opsi = "^4.2"/' pyproject.toml
    #- poetry update python-opsi
    - poetry install
    - poetry run opsi-dev-tool -l info --pyinstaller-poetry-build
    - mv opsiclientd opsiclientd.src
    - mv dist/opsiclientd opsiclientd_darwin_x64
    # Check if binary is working
    - ./opsiclientd_darwin_x64/opsiclientd --version
    # Push to biaryindex
    - '[ "$CI_COMMIT_TAG" = "" ] && poetry run opsi-dev-tool -l info --binary-push opsiclientd_darwin_x64 "$CI_JOB_ID"'
    - '[ "$CI_COMMIT_TAG" = "" ] || poetry run opsi-dev-tool -l info --binary-push opsiclientd_darwin_x64'
  artifacts:
    name: opsiclientd_darwin_x64
    paths:
      - opsiclientd_darwin_x64
    expire_in: 2 day

build:pyinstaller-windows-x86:
  stage: build
  tags:
    - win10
  script:
    #- $env:path
    #- where.exe poetry
    #- (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python -
    #- Get-Content pyproject.toml | %{ $_ -Replace '"^python-opsi = .*"', 'python-opsi = "^4.2"' } | Out-File -Encoding ASCII "pyproject.tmp"
    #- Move-Item -Path "pyproject.tmp" -Destination "pyproject.toml" -Force
    #- Get-Content pyproject.toml
    #- poetry update python-opsi
    - poetry install
    - poetry run opsi-dev-tool -l debug --pyinstaller-poetry-build
    - poetry run opsi-dev-tool -l info --signserver-sign dist\opsiclientd\opsiclientd.exe
    - poetry run opsi-dev-tool -l info --signserver-sign dist\opsiclientd\opsiclientd_rpc.exe
    - poetry run opsi-dev-tool -l info --signserver-sign dist\opsiclientd\action_processor_starter.exe
    - Move-Item -Path opsiclientd -Destination opsiclientd.src -Force
    - Move-Item -Path dist\opsiclientd -Destination opsiclientd_windows_x86
    # Check if binary is working
    - opsiclientd_windows_x86\opsiclientd.exe --version
    # Push to biaryindex
    - if (! $CI_COMMIT_TAG) {poetry run opsi-dev-tool -l info --binary-push opsiclientd_windows_x86 "$CI_JOB_ID"}
    - if ($CI_COMMIT_TAG) {poetry run opsi-dev-tool -l info --binary-push opsiclientd_windows_x86}
  artifacts:
    name: opsiclientd_windows_x86
    paths:
      - opsiclientd_windows_x86
    expire_in: 2 day
