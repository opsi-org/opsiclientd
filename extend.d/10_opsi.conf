# -*- coding: utf-8 -*-

def getProductOrdering(self, depotId, sortAlgorithm=None):
	import OPSI.SharedAlgorithm

	if not sortAlgorithm:
		sortAlgorithm = "algorithm2"
		configs = self.config_getObjects(id="product_sort_algorithm")
		if configs and ("algorithm1" in configs[0].getDefaultValues()):
			sortAlgorithm = "algorithm1"

	logger.notice(u'Using sort algorithm {0!r}'.format(sortAlgorithm))

	productsByIdAndVersion = {}
	for product in self.product_getObjects(type="LocalbootProduct"):
		if product.id not in productsByIdAndVersion:
			productsByIdAndVersion[product.id] = {}
		if product.productVersion not in productsByIdAndVersion[product.id]:
			productsByIdAndVersion[product.id][product.productVersion] = {}

		productsByIdAndVersion[product.id][product.productVersion][product.packageVersion] = product

	productsDependenciesByIdAndVersion = {}
	for productDependency in self.productDependency_getObjects(productAction="setup"):
		if productDependency.productId not in productsDependenciesByIdAndVersion:
			productsDependenciesByIdAndVersion[productDependency.productId] = {}
		if productDependency.productVersion not in productsDependenciesByIdAndVersion[productDependency.productId]:
			productsDependenciesByIdAndVersion[productDependency.productId][productDependency.productVersion] = {}
		if productDependency.packageVersion not in productsDependenciesByIdAndVersion[productDependency.productId][productDependency.productVersion]:
			productsDependenciesByIdAndVersion[productDependency.productId][productDependency.productVersion][productDependency.packageVersion] = []

		productsDependenciesByIdAndVersion[productDependency.productId][productDependency.productVersion][productDependency.packageVersion].append(productDependency)

	availableProducts = []
	productDependencies = []
	productIds = []
	for productOnDepot in self.productOnDepot_getObjects(depotId=depotId, productType="LocalbootProduct"):
		product = productsByIdAndVersion.get(productOnDepot.productId, {}).get(productOnDepot.productVersion, {}).get(productOnDepot.packageVersion)
		if not product:
			continue
		availableProducts.append(product)
		productIds.append(product.id)
		if not product.setupScript:
			continue
		productDependencies.extend(productsDependenciesByIdAndVersion.get(productOnDepot.productId, {}).get(productOnDepot.productVersion, {}).get(productOnDepot.packageVersion, []))

	productIds.sort()

	if sortAlgorithm == "algorithm1":
		sortedList = OPSI.SharedAlgorithm.generateProductSequence_algorithm1(availableProducts, productDependencies)
	else:
		sortedList = OPSI.SharedAlgorithm.generateProductSequence_algorithm2(availableProducts, productDependencies)

	return {
		"not_sorted": productIds,
		"sorted": sortedList
	}